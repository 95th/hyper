var searchIndex = {};
searchIndex["hyper"] = {"doc":"Hyper","items":[[3,"HeaderMap","hyper","A set of HTTP headers",null,null],[3,"Method","","The Request Method (VERB)",null,null],[3,"Request","","Represents an HTTP request.",null,null],[3,"Response","","Represents an HTTP response",null,null],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[3,"Uri","","The URI component of a request.",null,null],[3,"Version","","Represents a version of the HTTP spec.",null,null],[3,"Chunk","","A piece of a message body.",null,null],[0,"body","","Streaming bodies for Requests and Responses",null,null],[3,"Body","hyper::body","A `Payload` of `Chunk`s, used when receiving bodies.",null,null],[3,"Sender","","A sender half used with `Body::channel()`.",null,null],[8,"Payload","","This trait represents a streaming body of a `Request` or `Response`.",null,null],[16,"Data","","A buffer of bytes representing a single chunk of a body.",0,null],[16,"Error","","The error type of this stream.",0,null],[10,"poll_data","","Poll for a `Data` buffer.",0,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll_trailers","","Poll for an optional single `HeaderMap` of trailers.",0,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"is_end_stream","","A hint that the `Body` is complete, and doesn't need to be polled more.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"content_length","","Return a length of the total bytes that will be streamed, if known.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Create an empty `Body` stream.",2,{"inputs":[],"output":{"name":"body"}}],[11,"channel","","Create a `Body` stream with an associated sender half.",2,null],[11,"wrap_stream","","Wrap a futures `Stream` in a box inside `Body`.",2,{"inputs":[{"name":"s"}],"output":{"name":"body"}}],[11,"is_empty","","Returns if this body was constructed via `Body::empty()`.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"body"}}],[11,"poll_data","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll_trailers","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"is_end_stream","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"content_length","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_ready","","Check to see if this `Sender` can send more data.",1,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"send_data","","Sends data on this channel.",1,{"inputs":[{"name":"self"},{"name":"chunk"}],"output":{"generics":["chunk"],"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"chunk"}],"output":{"name":"body"}}],[11,"from","","",2,{"inputs":[{"name":"bytes"}],"output":{"name":"body"}}],[11,"from","","",2,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"body"}}],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"name":"cow"}],"output":{"name":"body"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"body"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"body"}}],[11,"from","","",2,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"body"}}],[11,"from","hyper","",3,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"chunk"}}],[11,"from","","",3,null],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"chunk"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"chunk"}}],[11,"from","","",3,{"inputs":[{"name":"bytes"}],"output":{"name":"chunk"}}],[11,"deref","","",3,null],[11,"as_ref","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"chunk"}}],[11,"into_iter","","",3,null],[11,"extend","","",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[0,"client","","HTTP Client",null,null],[8,"Service","hyper::client","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",4,null],[16,"Response","","Responses given by the service.",4,null],[16,"Error","","Errors produced by the service.",4,null],[16,"Future","","The future response value.",4,null],[10,"call","","Process the request and return the response asynchronously.",4,null],[3,"Client","","A Client to make outgoing HTTP requests.",null,null],[3,"FutureResponse","","A `Future` that will resolve to an HTTP Response.",null,null],[3,"Builder","","Builder for a Client",null,null],[0,"conn","","Lower-level client connection API.",null,null],[3,"SendRequest","hyper::client::conn","The sender side of an established connection.",null,null],[3,"Connection","","A future that processes all HTTP state for the IO object.",null,null],[3,"Builder","","A builder to configure an HTTP connection.",null,null],[3,"Handshake","","A future setting up HTTP over an IO object.",null,null],[3,"ResponseFuture","","A future returned by `SendRequest::send_request`.",null,null],[3,"Parts","","Deconstructed parts of a `Connection`.",null,null],[12,"io","","The original IO object used in the handshake.",5,null],[12,"read_buf","","A buffer of bytes that have been read but not processed as HTTP.",5,null],[5,"handshake","","Returns a `Handshake` future over some IO.",null,{"inputs":[{"name":"t"}],"output":{"generics":["body"],"name":"handshake"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_ready","","Polls to determine whether this sender can be used yet for a request.",7,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"send_request","","Sends a `Request` on the associated connection.",7,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"responsefuture"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_parts","","Return the inner IO object, and additional information.",8,{"inputs":[{"name":"self"}],"output":{"name":"parts"}}],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling `shutdown` on the underlying IO.",8,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new connection builder.",6,{"inputs":[],"output":{"name":"builder"}}],[11,"http2_only","","Sets whether HTTP2 is required.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"builder"}}],[11,"handshake","","Constructs a connection with the configured options and IO.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"handshake"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"connect","hyper::client","The `Connect` trait, and supporting types.",null,null],[3,"Destination","hyper::client::connect","A set of properties to describe where and how to try to connect.",null,null],[3,"Connected","","Extra information about the connected transport.",null,null],[3,"HttpConnector","","A connector for the `http` scheme.",null,null],[3,"HttpConnecting","","A Future representing work to connect to a URL.",null,null],[8,"Connect","","Connect to a destination, returning an IO transport.",null,null],[16,"Transport","","The connected IO Stream.",11,null],[16,"Error","","An error occured when trying to connect.",11,null],[16,"Future","","A Future that will resolve to the connected Transport.",11,null],[10,"connect","","Connect to a destination.",11,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","","Get the protocol scheme.",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"host","","Get the hostname.",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"port","","Get the port, if specified.",12,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"new","","Create new `Connected` type with empty metadata.",13,{"inputs":[],"output":{"name":"connected"}}],[11,"proxy","","Set whether the connected transport is to an HTTP proxy.",13,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"connected"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"httpconnector"}}],[11,"new","","Construct a new HttpConnector.",14,{"inputs":[{"name":"usize"}],"output":{"name":"httpconnector"}}],[11,"new_with_handle","","Construct a new HttpConnector with a specific Tokio handle.",14,{"inputs":[{"name":"usize"},{"name":"handle"}],"output":{"name":"httpconnector"}}],[11,"new_with_executor","","Construct a new HttpConnector.",14,{"inputs":[{"name":"e"},{"generics":["handle"],"name":"option"}],"output":{"name":"httpconnector"}}],[11,"enforce_http","","Option to enforce all `Uri`s have the `http` scheme.",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_keepalive","","Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.",14,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect","","",14,null],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","hyper::client","Create a new Client with the default config.",16,{"inputs":[],"output":{"generics":["httpconnector","body"],"name":"client"}}],[11,"default","","",16,{"inputs":[],"output":{"generics":["httpconnector","body"],"name":"client"}}],[11,"builder","","Configure a Client.",16,{"inputs":[],"output":{"name":"builder"}}],[11,"get","","Send a `GET` request to the supplied `Uri`.",16,{"inputs":[{"name":"self"},{"name":"uri"}],"output":{"name":"futureresponse"}}],[11,"request","","Send a constructed Request using this Client.",16,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"futureresponse"}}],[11,"call","","",16,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"client"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"keep_alive","","Enable or disable keep-alive mechanics.",18,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"keep_alive_timeout","","Set an optional timeout for idle sockets being kept-alive.",18,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"self"}}],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored writes, or always flatten into a single buffer.",18,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"http2_only","","Set whether the connection must use HTTP/2.",18,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"retry_canceled_requests","","Set whether to retry requests that get disrupted before ever starting to write.",18,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"set_host","","Set whether to automatically add the `Host` header to requests.",18,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"executor","","Provide an executor to execute background `Connection` tasks.",18,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"self"}}],[11,"build_http","","Builder a client with this configuration and the default `HttpConnector`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["httpconnector"],"name":"client"}}],[11,"build","","Combine the configuration of this builder with a connector to create a `Client`.",18,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"client"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"error","hyper","Error and Result module.",null,null],[3,"Error","hyper::error","Represents errors that can occur handling HTTP streams.",null,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"is_parse","","Returns true if this was an HTTP parse error.",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_user","","Returns true if this error was caused by user code.",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_canceled","","Returns true if this was about a `Request` that was canceled.",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_closed","","Returns true if a sender's channel is closed.",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",19,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[0,"server","hyper","HTTP Server",null,null],[8,"NewService","hyper::server","Creates new `Service` values.",null,null],[16,"Request","","Requests handled by the service",20,null],[16,"Response","","Responses given by the service",20,null],[16,"Error","","Errors produced by the service",20,null],[16,"Instance","","The `Service` value created by this factory",20,null],[10,"new_service","","Create and return a new service value.",20,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[8,"Service","","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",4,null],[16,"Response","","Responses given by the service.",4,null],[16,"Error","","Errors produced by the service.",4,null],[16,"Future","","The future response value.",4,null],[10,"call","","Process the request and return the response asynchronously.",4,null],[3,"Http","","A configuration of the HTTP protocol.",null,null],[3,"Server","","An instance of a server created through `Http::bind`.",null,null],[3,"Serve","","A stream mapping incoming IOs to new services.",null,null],[3,"AddrIncoming","","A stream of connections from binding to an address.",null,null],[3,"Run","","TODO: add docs",null,null],[5,"const_service","","Create a `NewService` by sharing references of `service.",null,{"inputs":[{"name":"s"}],"output":{"name":"constservice"}}],[5,"service_fn","","Create a `Service` from a function.",null,{"inputs":[{"name":"f"}],"output":{"name":"servicefn"}}],[0,"conn","","Lower-level Server connection API.",null,null],[3,"Connection","hyper::server::conn","A future binding a connection with a Service.",null,null],[3,"Parts","","Deconstructed parts of a `Connection`.",null,null],[12,"io","","The original IO object used in the handshake.",21,null],[12,"read_buf","","A buffer of bytes that have been read but not processed as HTTP.",21,null],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"graceful_shutdown","","Start a graceful shutdown process for this connection.",22,{"inputs":[{"name":"self"}],"output":null}],[11,"into_parts","","Return the inner IO object, and additional information.",22,{"inputs":[{"name":"self"}],"output":{"name":"parts"}}],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling `shutdown` on the underlying IO.",22,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","hyper::server","",23,{"inputs":[{"name":"self"}],"output":{"name":"http"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new instance of the HTTP protocol, ready to spawn a server or start accepting connections.",23,{"inputs":[],"output":{"name":"http"}}],[11,"http2_only","","Sets whether HTTP2 is required.",23,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"keep_alive","","Enables or disables HTTP keep-alive.",23,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"max_buf_size","","Set the maximum buffer size for the connection.",23,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"pipeline","","Aggregates flushes to better support pipelined responses.",23,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"executor","","Set the executor used to spawn background tasks.",23,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"self"}}],[11,"sleep_on_errors","","Swallow connection accept errors. Instead of passing up IO errors when the server is under heavy load the errors will be ignored. Some connection accept errors (like \"connection reset\") can be ignored, some (like \"too many files open\") may consume 100% CPU and a timout of 10ms is used in that case.",23,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"bind","","Bind the provided `addr` and return a server ready to handle connections.",23,{"inputs":[{"name":"self"},{"name":"socketaddr"},{"name":"s"}],"output":{"generics":["server"],"name":"result"}}],[11,"serve_addr","","Bind the provided `addr` and return a server with the default `Handle`.",23,{"inputs":[{"name":"self"},{"name":"socketaddr"},{"name":"s"}],"output":{"generics":["serve"],"name":"result"}}],[11,"serve_addr_handle","","Bind the provided `addr` and return a server with a shared `Core`.",23,{"inputs":[{"name":"self"},{"name":"socketaddr"},{"name":"handle"},{"name":"s"}],"output":{"generics":["serve"],"name":"result"}}],[11,"serve_incoming","","Bind the provided stream of incoming IO objects with a `NewService`.",23,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":{"name":"serve"}}],[11,"serve_connection","","Bind a connection together with a Service.",23,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":{"name":"connection"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",26,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"local_addr","","Returns the local address that this server is bound to.",27,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"shutdown_timeout","","Configure the amount of time this server will wait for a \"graceful shutdown\".",27,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"self"}}],[11,"run","","Execute this server infinitely.",27,{"inputs":[{"name":"self"}],"output":{"name":"run"}}],[11,"run_until","","Execute this server until the given future, `shutdown_signal`, resolves.",27,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"run"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"incoming_ref","","Get a reference to the incoming stream.",24,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"poll","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"local_addr","","Get the local address bound to this listener.",25,{"inputs":[{"name":"self"}],"output":{"name":"socketaddr"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"new","hyper","Create an empty `HeaderMap`.",28,{"inputs":[],"output":{"generics":["headervalue"],"name":"headermap"}}],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",28,{"inputs":[{"name":"usize"}],"output":{"name":"headermap"}}],[11,"len","","Returns the number of headers stored in the map.",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"keys_len","","Returns the number of keys stored in the map.",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory for reuse.",28,null],[11,"capacity","","Returns the number of headers the map can hold without reallocating.",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more headers to be inserted into the `HeaderMap`.",28,null],[11,"get","","Returns a reference to the value associated with the key.",28,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the value associated with the key.",28,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"name":"option"}}],[11,"get_all","","Returns a view of all values associated with a key.",28,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"name":"getall"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",28,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"name":"bool"}}],[11,"iter","","An iterator visiting all key-value pairs.",28,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable value references.",28,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"keys","","An iterator visiting all keys.",28,{"inputs":[{"name":"self"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values.",28,{"inputs":[{"name":"self"}],"output":{"name":"values"}}],[11,"values_mut","","An iterator visiting all values mutably.",28,{"inputs":[{"name":"self"}],"output":{"name":"valuesmut"}}],[11,"drain","","Clears the map, returning all entries as an iterator.",28,{"inputs":[{"name":"self"}],"output":{"name":"drain"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",28,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"generics":["entry","invalidheadername"],"name":"result"}}],[11,"insert","","Inserts a key-value pair into the map.",28,{"inputs":[{"name":"self"},{"name":"k"},{"name":"t"}],"output":{"name":"option"}}],[11,"append","","Inserts a key-value pair into the map.",28,{"inputs":[{"name":"self"},{"name":"k"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a key from the map, returning the value associated with the key.",28,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"name":"option"}}],[11,"from_str","","",29,{"inputs":[{"name":"str"}],"output":{"generics":["uri","invaliduri"],"name":"result"}}],[11,"from_str","","",30,{"inputs":[{"name":"str"}],"output":{"generics":["statuscode","invalidstatuscode"],"name":"result"}}],[11,"from_str","","",31,{"inputs":[{"name":"str"}],"output":{"generics":["method"],"name":"result"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"version"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"response"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"headermap"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"request"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"uri"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"statuscode"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"method"}}],[11,"as_ref","","",31,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bool"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"headermap"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"uri"}],"output":{"name":"bool"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"index","","",28,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"name":"t"}}],[11,"hash","","",29,null],[11,"hash","","",31,null],[11,"hash","","",32,null],[11,"hash","","",30,null],[11,"extend","","Extend a `HeaderMap` with the contents of another `HeaderMap`.",28,null],[11,"extend","","",28,null],[11,"partial_cmp","","",32,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"uri"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves keys and values out of the map in arbitary order. The map cannot be used after calling this.",28,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"try_from","","",29,{"inputs":[{"name":"parts"}],"output":{"generics":["uri"],"name":"result"}}],[11,"try_from","","",29,{"inputs":[{"name":"string"}],"output":{"generics":["uri"],"name":"result"}}],[11,"try_from","","",30,{"inputs":[{"name":"u16"}],"output":{"generics":["statuscode"],"name":"result"}}],[11,"try_from","","",29,{"inputs":[{"name":"str"}],"output":{"generics":["uri"],"name":"result"}}],[11,"try_from","","",29,{"inputs":[{"name":"uri"}],"output":{"generics":["uri"],"name":"result"}}],[11,"try_from","","",31,{"inputs":[{"name":"method"}],"output":{"generics":["method"],"name":"result"}}],[11,"try_from","","",31,null],[11,"try_from","","",30,{"inputs":[{"name":"statuscode"}],"output":{"generics":["statuscode"],"name":"result"}}],[11,"try_from","","",30,null],[11,"try_from","","",29,{"inputs":[{"name":"bytes"}],"output":{"generics":["uri"],"name":"result"}}],[11,"try_from","","",30,{"inputs":[{"name":"str"}],"output":{"generics":["statuscode"],"name":"result"}}],[11,"try_from","","",29,{"inputs":[{"name":"uri"}],"output":{"generics":["uri"],"name":"result"}}],[11,"try_from","","",31,{"inputs":[{"name":"str"}],"output":{"generics":["method"],"name":"result"}}],[11,"try_from","","",29,{"inputs":[{"name":"string"}],"output":{"generics":["uri"],"name":"result"}}],[11,"cmp","","",32,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"cmp","","",30,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"from_iter","","",28,{"inputs":[{"name":"i"}],"output":{"name":"headermap"}}],[18,"GET","","GET",31,null],[18,"POST","","POST",31,null],[18,"PUT","","PUT",31,null],[18,"DELETE","","DELETE",31,null],[18,"HEAD","","HEAD",31,null],[18,"OPTIONS","","OPTIONS",31,null],[18,"CONNECT","","CONNECT",31,null],[18,"PATCH","","PATCH",31,null],[18,"TRACE","","TRACE",31,null],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",31,null],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request is essentially read-only.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result if executed multiple times.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_str","","Return a &str representation of the HTTP method",31,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"builder","","Creates a new builder-style object to manufacture a `Request`",34,{"inputs":[],"output":{"name":"builder"}}],[11,"get","","Creates a new `Builder` initialized with a GET method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"put","","Creates a new `Builder` initialized with a PUT method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"post","","Creates a new `Builder` initialized with a POST method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"delete","","Creates a new `Builder` initialized with a DELETE method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"options","","Creates a new `Builder` initialized with an OPTIONS method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"head","","Creates a new `Builder` initialized with a HEAD method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"connect","","Creates a new `Builder` initialized with a CONNECT method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"patch","","Creates a new `Builder` initialized with a PATCH method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"trace","","Creates a new `Builder` initialized with a TRACE method and the given URI.",34,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"new","","Creates a new blank `Request` with the body",34,{"inputs":[{"name":"t"}],"output":{"name":"request"}}],[11,"from_parts","","Creates a new `Request` with the given components parts and body.",34,{"inputs":[{"name":"parts"},{"name":"t"}],"output":{"name":"request"}}],[11,"method","","Returns a reference to the associated HTTP method.",34,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",34,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"uri","","Returns a reference to the associated URI.",34,{"inputs":[{"name":"self"}],"output":{"name":"uri"}}],[11,"uri_mut","","Returns a mutable reference to the associated URI.",34,{"inputs":[{"name":"self"}],"output":{"name":"uri"}}],[11,"version","","Returns the associated version.",34,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"version_mut","","Returns a mutable reference to the associated version.",34,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"headers","","Returns a reference to the associated header field map.",34,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"headers_mut","","Returns a mutable reference to the associated header field map.",34,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"extensions","","Returns a reference to the associated extensions.",34,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",34,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[11,"body","","Returns a reference to the associated HTTP body.",34,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",34,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_body","","Consumes the request, returning just the body.",34,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_parts","","Consumes the request returning the head and body parts.",34,null],[11,"map","","Consumes the request returning a new request with body mapped to the return type of the passed in function.",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"request"}}],[11,"builder","","Creates a new builder-style object to manufacture a `Response`",33,{"inputs":[],"output":{"name":"builder"}}],[11,"new","","Creates a new blank `Response` with the body",33,{"inputs":[{"name":"t"}],"output":{"name":"response"}}],[11,"from_parts","","Creates a new `Response` with the given head and body",33,{"inputs":[{"name":"parts"},{"name":"t"}],"output":{"name":"response"}}],[11,"status","","Returns the `StatusCode`.",33,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"status_mut","","Returns a mutable reference to the associated `StatusCode`.",33,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"version","","Returns a reference to the associated version.",33,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"version_mut","","Returns a mutable reference to the associated version.",33,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"headers","","Returns a reference to the associated header field map.",33,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"headers_mut","","Returns a mutable reference to the associated header field map.",33,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"extensions","","Returns a reference to the associated extensions.",33,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",33,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[11,"body","","Returns a reference to the associated HTTP body.",33,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",33,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_body","","Consumes the response, returning just the body.",33,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_parts","","Consumes the response returning the head and body parts.",33,null],[11,"map","","Consumes the response returning a new response with body mapped to the return type of the passed in function.",33,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"response"}}],[11,"from_u16","","Converts a u16 to a status code.",30,{"inputs":[{"name":"u16"}],"output":{"generics":["statuscode","invalidstatuscode"],"name":"result"}}],[11,"from_bytes","","Converts a &[u8] to a status code",30,null],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",30,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"is_informational","","Check if status is within 100-199.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_success","","Check if status is within 200-299.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if status is within 300-399.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if status is within 400-499.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if status is within 500-599.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",30,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",30,null],[18,"PROCESSING","","102 Processing [RFC2518]",30,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",30,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",30,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",30,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",30,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",30,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",30,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",30,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",30,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",30,null],[18,"IM_USED","","226 IM Used [RFC3229]",30,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",30,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",30,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",30,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",30,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",30,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",30,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",30,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",30,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",30,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",30,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",30,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",30,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",30,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",30,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",30,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",30,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",30,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",30,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",30,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",30,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",30,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",30,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",30,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",30,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",30,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",30,null],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but RFC2324]",30,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",30,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",30,null],[18,"LOCKED","","423 Locked [RFC4918]",30,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",30,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",30,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",30,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",30,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",30,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",30,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",30,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",30,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",30,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",30,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",30,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",30,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",30,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",30,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",30,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",30,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",30,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",30,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"as_str","","Returns a &str representation of the `StatusCode`",30,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",29,{"inputs":[{"name":"parts"}],"output":{"generics":["uri","invaliduriparts"],"name":"result"}}],[11,"from_shared","","Attempt to convert a `Uri` from `Bytes`",29,{"inputs":[{"name":"bytes"}],"output":{"generics":["uri","invaliduribytes"],"name":"result"}}],[11,"path_and_query","","Returns the path & query components of the Uri",29,{"inputs":[{"name":"self"}],"output":{"generics":["pathandquery"],"name":"option"}}],[11,"path","","Get the path of this `Uri`.",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"scheme_part","","Get the scheme of this `Uri`.",29,{"inputs":[{"name":"self"}],"output":{"generics":["scheme"],"name":"option"}}],[11,"authority_part","","Get the authority of this `Uri`.",29,{"inputs":[{"name":"self"}],"output":{"generics":["authority"],"name":"option"}}],[11,"host","","Get the host of this `Uri`.",29,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"port","","Get the port of this `Uri`.",29,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",29,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[18,"HTTP_09","","`HTTP/0.9`",32,null],[18,"HTTP_10","","`HTTP/1.0`",32,null],[18,"HTTP_11","","`HTTP/1.1`",32,null],[18,"HTTP_2","","`HTTP/2.0`",32,null]],"paths":[[8,"Payload"],[3,"Sender"],[3,"Body"],[3,"Chunk"],[8,"Service"],[3,"Parts"],[3,"Builder"],[3,"SendRequest"],[3,"Connection"],[3,"Handshake"],[3,"ResponseFuture"],[8,"Connect"],[3,"Destination"],[3,"Connected"],[3,"HttpConnector"],[3,"HttpConnecting"],[3,"Client"],[3,"FutureResponse"],[3,"Builder"],[3,"Error"],[8,"NewService"],[3,"Parts"],[3,"Connection"],[3,"Http"],[3,"Serve"],[3,"AddrIncoming"],[3,"Run"],[3,"Server"],[3,"HeaderMap"],[3,"Uri"],[3,"StatusCode"],[3,"Method"],[3,"Version"],[3,"Response"],[3,"Request"]]};
initSearch(searchIndex);
