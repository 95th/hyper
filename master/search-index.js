var N = null;var searchIndex = {};
searchIndex["hyper"]={"doc":"hyper","items":[[0,"header","hyper","HTTP header types",N,N],[17,"CONTENT_TYPE","hyper::header","Used to indicate the media type of the resource.",N,N],[17,"ORIGIN","","Indicates where a fetch originates from.",N,N],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long the user agent should wait before making a follow-up request. There are two main cases this header is used:",N,N],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with resources with the given origin.",N,N],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to load for a given page.",N,N],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the entity to the client.",N,N],[3,"Values","","`HeaderMap` value iterator.",N,N],[3,"ValueIterMut","","A mutable iterator of all values associated with a single header name.",N,N],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the WebSocket opening handshake. It is sent from the client to the server and back from the server to the client to confirm the subprotocol of the connection.  This enables scripts to both select a subprotocol and be sure that the server agreed to serve that subprotocol.",N,N],[3,"InvalidHeaderValueBytes","","A possible error when converting a `HeaderValue` from a string or byte slice.",N,N],[17,"USER_AGENT","","Contains a string that allows identifying the requesting client's software.",N,N],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri specified in the header.",N,N],[17,"AGE","","Indicates the time in seconds the object has been in a proxy cache.",N,N],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the server in order to properly handle the request.",N,N],[4,"Entry","","A view into a single location in a `HeaderMap`, which may be vacant or occupied.",N,N],[13,"Occupied","","An occupied entry",0,N],[13,"Vacant","","A vacant entry",0,N],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",N,N],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a proxy server.",N,N],[17,"DATE","","Contains the date and time at which the message was originated.",N,N],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to understand.",N,N],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the WebSocket opening handshake. It is sent from the client to the server to provide part of the information used by the server to prove that it received a valid WebSocket opening handshake. This helps ensure that the server does not accept connections from non-WebSocket clients (e.g., HTTP clients) that are being abused to send data to unsuspecting WebSocket servers.",N,N],[17,"TRAILER","","Allows the sender to include additional fields at the end of chunked messages.",N,N],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the clientâ€™s preference for an encrypted and authenticated response.",N,N],[17,"CONNECTION","","Controls whether or not the network connection stays open after the current transaction finishes.",N,N],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",N,N],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server with the Set-Cookie header.",N,N],[17,"WARNING","","General HTTP header contains information about possible problems with the status of the message.",N,N],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",N,N],[8,"AsHeaderName","","A marker trait used to identify values that can be used as search keys to a `HeaderMap`.",N,N],[17,"FROM","","Contains an Internet email address for a human user who controls the requesting user agent.",N,N],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a string representation.",N,N],[17,"RANGE","","Indicates the part of a document that the server should return.",N,N],[17,"LOCATION","","Indicates the URL to redirect a page to.",N,N],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",N,N],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request support.",N,N],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an actual request is made.",N,N],[17,"ALLOW","","Lists the set of methods support by a resource.",N,N],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",N,N],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",N,N],[17,"ETAG","","Identifier for a specific version of a resource.",N,N],[3,"Iter","","`HeaderMap` entry iterator.",N,N],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the WebSocket opening handshake.  It is sent from the client to the server to indicate the protocol version of the connection.  This enables servers to correctly interpret the opening handshake and subsequent data being sent from the data, and close the connection if the server cannot interpret that data in a safe manner.",N,N],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",N,N],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",N,N],[17,"IF_RANGE","","Makes a request conditional based on range.",N,N],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as insert keys to a `HeaderMap`.",N,N],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the response by listing their names.",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",N,N],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",N,N],[3,"InvalidHeaderNameBytes","","A possible error when converting a `HeaderName` from another type.",N,N],[17,"ALT_SVC","","Advertises the availability of alternate services to clients.",N,N],[3,"ValueDrain","","An drain iterator of all values associated with a single header name.",N,N],[17,"REFERRER_POLICY","","Governs which referrer information should be included with requests made.",N,N],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of using HTTP.",N,N],[17,"VARY","","Determines how to match future requests with cached responses.",N,N],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to gain access to a resource.",N,N],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",N,N],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their effects.",N,N],[17,"EXPIRES","","Contains the date/time after which the response is considered stale.",N,N],[17,"SERVER","","Contains information about the software used by the origin server to handle the request.",N,N],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a certain server.",N,N],[17,"REFERER","","Contains the address of the previous web page from which a link to the currently requested page was followed.",N,N],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to understand.",N,N],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the request can be exposed to the page.",N,N],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used when the actual request is made.",N,N],[3,"HeaderName","","Represents an HTTP header field name",N,N],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last modification date.",N,N],[17,"ACCEPT","","Advertises which content types the client is able to understand.",N,N],[3,"ValueIter","","An iterator of all values associated with a single header name.",N,N],[3,"HeaderValue","","Represents an HTTP header field value.",N,N],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",N,N],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the WebSocket opening handshake. It is sent from the server to the client to confirm that the server is willing to initiate the WebSocket connection.",N,N],[3,"Drain","","A drain iterator for `HeaderMap`.",N,N],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with a server.",N,N],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request should be sent through.",N,N],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to gain access to a proxy.",N,N],[17,"REFRESH","","Informs the web browser that the current page or frame should be refreshed.",N,N],[17,"HOST","","Specifies the domain name of the server and (optionally) the TCP port number on which the server is listening.",N,N],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access methods.",N,N],[17,"VIA","","Added by proxies to track routing.",N,N],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types advertised in the `content-type` headers should not be changed and be followed.",N,N],[17,"LINK","","Allows the server to point an interested client to another resource containing metadata about the requested resource.",N,N],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message belongs.",N,N],[17,"FORWARDED","","Contains information from the client-facing side of proxy servers that is altered or lost when a proxy is involved in the path of the request.",N,N],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",N,N],[3,"HeaderMap","","A set of HTTP headers",N,N],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",N,N],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",N,N],[3,"Keys","","An iterator over `HeaderMap` keys.",N,N],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from another type.",N,N],[3,"GetAll","","A view to all values stored in a single entry.",N,N],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",N,N],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a string or byte slice.",N,N],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to render a page in a frame.",N,N],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the WebSocket opening handshake. It is initially sent from the client to the server, and then subsequently sent from the server to the client, to agree on a set of protocol-level extensions to use for the duration of the connection.",N,N],[17,"TE","","Informs the server of transfer encodings willing to be accepted as part of the response.",N,N],[17,"DNT","","Indicates the client's tracking preference.",N,N],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can be cached.",N,N],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both requests and responses.",N,N],[17,"CONTENT_ENCODING","","Used to compress the media-type.",N,N],[3,"HeaderMap","hyper","A set of HTTP headers",N,N],[3,"Method","","The Request Method (VERB)",N,N],[3,"Request","","Represents an HTTP request.",N,N],[3,"Response","","Represents an HTTP response",N,N],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[3,"Uri","","The URI component of a request.",N,N],[3,"Version","","Represents a version of the HTTP spec.",N,N],[3,"Body","","A stream of `Chunk`s, used when receiving bodies.",N,N],[3,"Chunk","","A piece of a message body.",N,N],[0,"body","","Streaming bodies for Requests and Responses",N,N],[3,"Body","hyper::body","A stream of `Chunk`s, used when receiving bodies.",N,N],[3,"Sender","","A sender half used with `Body::channel()`.",N,N],[3,"Chunk","","A piece of a message body.",N,N],[11,"empty","hyper","Create an empty `Body` stream.",1,[[],["body"]]],[11,"channel","","Create a `Body` stream with an associated sender half.",1,N],[11,"wrap_stream","","Wrap a futures `Stream` in a box inside `Body`.",1,[[["s"]],["body"]]],[11,"on_upgrade","","Converts this `Body` into a `Future` of a pending HTTP upgrade.",1,[[["self"]],["onupgrade"]]],[11,"poll_ready","hyper::body","Check to see if this `Sender` can send more data.",2,[[["self"]],["poll",["error"]]]],[11,"send_data","","Sends data on this channel.",2,[[["self"],["chunk"]],["result",["chunk"]]]],[11,"abort","","Aborts the body in an abnormal fashion.",2,[[["self"]]]],[11,"into_bytes","hyper","Converts this `Chunk` directly into the `Bytes` type without copies.",3,[[["self"]],["bytes"]]],[8,"Payload","hyper::body","This trait represents a streaming body of a `Request` or `Response`.",N,N],[16,"Data","","A buffer of bytes representing a single chunk of a body.",4,N],[16,"Error","","The error type of this stream.",4,N],[10,"poll_data","","Poll for a `Data` buffer.",4,[[["self"]],["poll",["option"]]]],[11,"poll_trailers","","Poll for an optional single `HeaderMap` of trailers.",4,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","A hint that the `Body` is complete, and doesn't need to be polled more.",4,[[["self"]],["bool"]]],[11,"content_length","","Return a length of the total bytes that will be streamed, if known.",4,[[["self"]],["option",["u64"]]]],[0,"client","hyper","HTTP Client",N,N],[3,"HttpConnector","hyper::client","A connector for the `http` scheme.",N,N],[3,"Client","","A Client to make outgoing HTTP requests.",N,N],[3,"ResponseFuture","","A `Future` that will resolve to an HTTP Response.",N,N],[3,"Builder","","Builder for a Client",N,N],[0,"conn","","Lower-level client connection API.",N,N],[3,"SendRequest","hyper::client::conn","The sender side of an established connection.",N,N],[3,"Connection","","A future that processes all HTTP state for the IO object.",N,N],[3,"Builder","","A builder to configure an HTTP connection.",N,N],[3,"Handshake","","A future setting up HTTP over an IO object.",N,N],[3,"ResponseFuture","","A future returned by `SendRequest::send_request`.",N,N],[3,"Parts","","Deconstructed parts of a `Connection`.",N,N],[12,"io","","The original IO object used in the handshake.",5,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as HTTP.",5,N],[5,"handshake","","Returns a `Handshake` future over some IO.",N,[[["t"]],["handshake",["body"]]]],[11,"poll_ready","","Polls to determine whether this sender can be used yet for a request.",6,[[["self"]],["poll",["error"]]]],[11,"send_request","","Sends a `Request` on the associated connection.",6,[[["self"],["request"]],["responsefuture"]]],[11,"into_parts","","Return the inner IO object, and additional information.",7,[[["self"]],["parts"]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling `shutdown` on the underlying IO.",7,[[["self"]],["poll",["error"]]]],[11,"new","","Creates a new connection builder.",8,[[],["builder"]]],[11,"http2_only","","Sets whether HTTP2 is required.",8,[[["self"],["bool"]],["builder"]]],[11,"handshake","","Constructs a connection with the configured options and IO.",8,[[["self"],["t"]],["handshake"]]],[0,"connect","hyper::client","The `Connect` trait, and supporting types.",N,N],[3,"HttpConnector","hyper::client::connect","A connector for the `http` scheme.",N,N],[3,"Destination","","A set of properties to describe where and how to try to connect.",N,N],[3,"Connected","","Extra information about the connected transport.",N,N],[11,"new","hyper::client","Construct a new HttpConnector.",9,[[["usize"]],["httpconnector"]]],[11,"new_with_handle","","Construct a new HttpConnector with a specific Tokio handle.",9,[[["usize"],["handle"]],["httpconnector"]]],[11,"new_with_executor","","Construct a new HttpConnector.",9,[[["e"],["option",["handle"]]],["httpconnector"]]],[11,"enforce_http","","Option to enforce all `Uri`s have the `http` scheme.",9,[[["self"],["bool"]]]],[11,"set_keepalive","","Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.",9,[[["self"],["option",["duration"]]]]],[11,"set_nodelay","","Set that all sockets have `SO_NODELAY` set to the supplied value `nodelay`.",9,[[["self"],["bool"]]]],[11,"set_local_address","","Set that all sockets are bound to the configured address before connection.",9,[[["self"],["option",["ipaddr"]]]]],[11,"set_happy_eyeballs_timeout","","Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555] algorithm.",9,[[["self"],["option",["duration"]]]]],[11,"set_reuse_address","","Set that all socket have `SO_REUSEADDR` set to the supplied value `reuse_address`.",9,[[["self"],["bool"]],["self"]]],[8,"Connect","hyper::client::connect","Connect to a destination, returning an IO transport.",N,N],[16,"Transport","","The connected IO Stream.",10,N],[16,"Error","","An error occured when trying to connect.",10,N],[16,"Future","","A Future that will resolve to the connected Transport.",10,N],[10,"connect","","Connect to a destination.",10,N],[11,"scheme","","Get the protocol scheme.",11,[[["self"]],["str"]]],[11,"host","","Get the hostname.",11,[[["self"]],["str"]]],[11,"port","","Get the port, if specified.",11,[[["self"]],["option",["u16"]]]],[11,"set_scheme","","Update the scheme of this destination.",11,[[["self"],["str"]],["result"]]],[11,"set_host","","Update the host of this destination.",11,[[["self"],["str"]],["result"]]],[11,"set_port","","Update the port of this destination.",11,[[["self"],["p"]]]],[11,"new","","Create new `Connected` type with empty metadata.",12,[[],["connected"]]],[11,"proxy","","Set whether the connected transport is to an HTTP proxy.",12,[[["self"],["bool"]],["connected"]]],[11,"new","hyper::client","Create a new Client with the default config.",13,[[],["client",["httpconnector","body"]]]],[11,"builder","","Configure a Client.",13,[[],["builder"]]],[11,"get","","Send a `GET` request to the supplied `Uri`.",13,[[["self"],["uri"]],["responsefuture"]]],[11,"request","","Send a constructed Request using this Client.",13,[[["self"],["request"]],["responsefuture"]]],[11,"keep_alive","","Enable or disable keep-alive mechanics.",14,[[["self"],["bool"]],["self"]]],[11,"keep_alive_timeout","","Set an optional timeout for idle sockets being kept-alive.",14,[[["self"],["d"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored writes, or always flatten into a single buffer.",14,[[["self"],["bool"]],["self"]]],[11,"http1_title_case_headers","","Set whether HTTP/1 connections will write header names as title case at the socket level.",14,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Set whether the connection must use HTTP/2.",14,[[["self"],["bool"]],["self"]]],[11,"max_idle_per_host","","Sets the maximum idle connection per host allowed in the pool.",14,[[["self"],["usize"]],["self"]]],[11,"retry_canceled_requests","","Set whether to retry requests that get disrupted before ever starting to write.",14,[[["self"],["bool"]],["self"]]],[11,"set_host","","Set whether to automatically add the `Host` header to requests.",14,[[["self"],["bool"]],["self"]]],[11,"executor","","Provide an executor to execute background `Connection` tasks.",14,[[["self"],["e"]],["self"]]],[11,"build_http","","Builder a client with this configuration and the default `HttpConnector`.",14,[[["self"]],["client",["httpconnector"]]]],[11,"build","","Combine the configuration of this builder with a connector to create a `Client`.",14,[[["self"],["c"]],["client"]]],[0,"error","hyper","Error and Result module.",N,N],[3,"Error","hyper::error","Represents errors that can occur handling HTTP streams.",N,N],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",N,N],[11,"is_parse","","Returns true if this was an HTTP parse error.",15,[[["self"]],["bool"]]],[11,"is_user","","Returns true if this error was caused by user code.",15,[[["self"]],["bool"]]],[11,"is_canceled","","Returns true if this was about a `Request` that was canceled.",15,[[["self"]],["bool"]]],[11,"is_closed","","Returns true if a sender's channel is closed.",15,[[["self"]],["bool"]]],[11,"cause2","","Returns the error's cause.",15,[[["self"]],["option",["stderror"]]]],[11,"into_cause","","Consumes the error, returning its cause.",15,[[["self"]],["option",["box"]]]],[0,"server","hyper","HTTP Server",N,N],[3,"Server","hyper::server","A listening HTTP server that accepts connections in both HTTP1 and HTTP2 by default.",N,N],[3,"Builder","","A builder for a `Server`.",N,N],[0,"conn","","Lower-level Server connection API.",N,N],[3,"AddrIncoming","hyper::server::conn","A stream of connections from binding to an address.",N,N],[3,"Http","","A lower-level configuration of the HTTP protocol.",N,N],[3,"Serve","","A stream mapping incoming IOs to new services.",N,N],[3,"Connecting","","A future building a new `Service` to a `Connection`.",N,N],[3,"Connection","","A future binding a connection with a Service.",N,N],[3,"Parts","","Deconstructed parts of a `Connection`.",N,N],[12,"io","","The original IO object used in the handshake.",16,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as HTTP.",16,N],[12,"service","","The `Service` used to serve this connection.",16,N],[11,"new","","Creates a new instance of the HTTP protocol, ready to spawn a server or start accepting connections.",17,[[],["http"]]],[11,"http1_only","","Sets whether HTTP1 is required.",17,[[["self"],["bool"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored writes, or always flatten into a single buffer.",17,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Sets whether HTTP2 is required.",17,[[["self"],["bool"]],["self"]]],[11,"keep_alive","","Enables or disables HTTP keep-alive.",17,[[["self"],["bool"]],["self"]]],[11,"max_buf_size","","Set the maximum buffer size for the connection.",17,[[["self"],["usize"]],["self"]]],[11,"pipeline_flush","","Aggregates flushes to better support pipelined responses.",17,[[["self"],["bool"]],["self"]]],[11,"executor","","Set the executor used to spawn background tasks.",17,[[["self"],["e"]],["self"]]],[11,"serve_connection","","Bind a connection together with a `Service`.",17,[[["self"],["i"],["s"]],["connection"]]],[11,"serve_addr","","Bind the provided `addr` with the default `Handle` and return `Serve`.",17,[[["self"],["socketaddr"],["s"]],["result",["serve"]]]],[11,"serve_addr_handle","","Bind the provided `addr` with the `Handle` and return a `Serve`",17,[[["self"],["socketaddr"],["handle"],["s"]],["result",["serve"]]]],[11,"serve_incoming","","Bind the provided stream of incoming IO objects with a `NewService`.",17,[[["self"],["i"],["s"]],["serve"]]],[11,"graceful_shutdown","","Start a graceful shutdown process for this connection.",18,[[["self"]]]],[11,"into_parts","","Return the inner IO object, and additional information.",18,[[["self"]],["parts"]]],[11,"try_into_parts","","Return the inner IO object, and additional information, if available.",18,[[["self"]],["option",["parts"]]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling `shutdown` on the underlying IO.",18,[[["self"]],["poll",["error"]]]],[11,"with_upgrades","","Enable this connection to support higher-level HTTP upgrades.",18,[[["self"]],["upgradeableconnection"]]],[11,"incoming_ref","","Get a reference to the incoming stream.",19,[[["self"]],["i"]]],[11,"incoming_mut","","Get a mutable reference to the incoming stream.",19,[[["self"]],["i"]]],[11,"local_addr","","Get the local address bound to this listener.",20,[[["self"]],["socketaddr"]]],[11,"set_keepalive","","Set whether TCP keepalive messages are enabled on accepted connections.",20,[[["self"],["option",["duration"]]],["self"]]],[11,"set_nodelay","","Set the value of `TCP_NODELAY` option for accepted connections.",20,[[["self"],["bool"]],["self"]]],[11,"set_sleep_on_errors","","Set whether to sleep on accept errors.",20,[[["self"],["bool"]]]],[11,"builder","hyper::server","Starts a `Builder` with the provided incoming stream.",21,[[["i"]],["builder"]]],[11,"bind","","Binds to the provided address, and returns a `Builder`.",21,[[["socketaddr"]],["builder",["addrincoming"]]]],[11,"try_bind","","Tries to bind to the provided address, and returns a `Builder`.",21,[[["socketaddr"]],["result",["builder"]]]],[11,"from_tcp","","Create a new instance from a `std::net::TcpListener` instance.",21,[[["stdtcplistener"]],["result",["builder","error"]]]],[11,"local_addr","","Returns the local address that this server is bound to.",21,[[["self"]],["socketaddr"]]],[11,"with_graceful_shutdown","","Prepares a server to handle graceful shutdown when the provided future completes.",21,[[["self"],["f"]],["graceful"]]],[11,"new","","Start a new builder, wrapping an incoming stream and low-level options.",22,[[["i"],["http_"]],["self"]]],[11,"http1_keepalive","","Sets whether to use keep-alive for HTTP/1 connections.",22,[[["self"],["bool"]],["self"]]],[11,"http1_only","","Sets whether HTTP/1 is required.",22,[[["self"],["bool"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored writes, or always flatten into a single buffer.",22,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Sets whether HTTP/2 is required.",22,[[["self"],["bool"]],["self"]]],[11,"serve","","Consume this `Builder`, creating a `Server`.",22,[[["self"],["s"]],["server"]]],[11,"tcp_keepalive","","Set whether TCP keepalive messages are enabled on accepted connections.",22,[[["self"],["option",["duration"]]],["self"]]],[11,"tcp_nodelay","","Set the value of `TCP_NODELAY` option for accepted connections.",22,[[["self"],["bool"]],["self"]]],[0,"service","hyper","Services and NewServices",N,N],[5,"service_fn","hyper::service","Create a `Service` from a function.",N,[[["f"]],["servicefn"]]],[5,"service_fn_ok","","Create a `Service` from a function that never errors.",N,[[["f"]],["servicefnok"]]],[8,"NewService","","An asynchronous constructor of `Service`s.",N,N],[16,"ReqBody","","The `Payload` body of the `http::Request`.",23,N],[16,"ResBody","","The `Payload` body of the `http::Response`.",23,N],[16,"Error","","The error type that can be returned by `Service`s.",23,N],[16,"Service","","The resolved `Service` from `new_service()`.",23,N],[16,"Future","","The future returned from `new_service` of a `Service`.",23,N],[16,"InitError","","The error type that can be returned when creating a new `Service`.",23,N],[10,"new_service","","Create a new `Service`.",23,N],[8,"Service","","An asynchronous function from `Request` to `Response`.",N,N],[16,"ReqBody","","The `Payload` body of the `http::Request`.",24,N],[16,"ResBody","","The `Payload` body of the `http::Response`.",24,N],[16,"Error","","The error type that can occur within this `Service`.",24,N],[16,"Future","","The `Future` returned by this `Service`.",24,N],[10,"call","","Calls this `Service` with a request, returning a `Future` of the response.",24,N],[0,"rt","hyper","Default runtime",N,N],[8,"Future","hyper::rt","Trait for types which are a placeholder of a value that may become available at some later point in time.",N,N],[16,"Item","","The type of value that this future will resolved with if it is successful.",25,N],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",25,N],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",25,[[["self"]],["result",["async"]]]],[11,"wait","","Block the current thread until this future is resolved.",25,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",25,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a new future.",25,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",25,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",25,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved successfully.",25,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",25,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",25,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to complete.",25,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to complete.",25,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",25,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",25,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",25,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",25,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",25,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",25,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",25,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",25,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",25,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",25,[[["self"]],["shared"]]],[8,"Stream","","A stream of values, not all of which may have been produced yet.",N,N],[16,"Item","","The type of item this stream will yield on success.",26,N],[16,"Error","","The type of error this stream may generate.",26,N],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",26,[[["self"]],["result",["async"]]]],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",26,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",26,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",26,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",26,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",26,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",26,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",26,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",26,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",26,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",26,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",26,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",26,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",26,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",26,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",26,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",26,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",26,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",26,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",26,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",26,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",26,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",26,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",26,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",26,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",26,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",26,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",26,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",26,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",26,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",26,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",26,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",26,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",26,N],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",26,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",26,[[["self"],["f"]],["inspecterr"]]],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",N,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",N,[[["f"]],["pollfn"]]],[5,"spawn","","Spawns a future on the default executor.",N,[[["f"]],["spawn"]]],[5,"run","","Start the Tokio runtime using the supplied future to bootstrap execution.",N,[[["f"]]]],[0,"upgrade","hyper","HTTP Upgrades",N,N],[3,"Upgraded","hyper::upgrade","An upgraded HTTP connection.",N,N],[3,"OnUpgrade","","A future for a possible HTTP upgrade.",N,N],[3,"Parts","","The deconstructed parts of an `Upgraded` type.",N,N],[12,"io","","The original IO object used before the upgrade.",27,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as HTTP.",27,N],[11,"downcast","","Tries to downcast the internal trait object to the type passed.",28,[[["self"]],["result",["parts"]]]],[11,"into","hyper::header","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into_iter","","",38,[[["self"]],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"equivalent","","",39,[[["self"],["k"]],["bool"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"equivalent","","",41,[[["self"],["k"]],["bool"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into_iter","","",42,[[["self"]],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","hyper","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into_iter","","",43,[[["self"]],["i"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"equivalent","","",43,[[["self"],["k"]],["bool"]]],[11,"into","hyper::header","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into_iter","","",44,[[["self"]],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","hyper","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"equivalent","","",48,[[["self"],["k"]],["bool"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"equivalent","","",51,[[["self"],["k"]],["bool"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"equivalent","","",52,[[["self"],["k"]],["bool"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"equivalent","","",53,[[["self"],["k"]],["bool"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_buf","","",3,[[["self"]],["t"]]],[11,"into","hyper::body","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","hyper::client","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_future","","",54,[[["self"]],["f"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","hyper::client::conn","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_future","","",55,[[["self"]],["f"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_future","","",56,[[["self"]],["f"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","hyper::client::connect","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","hyper::error","",15,[[["self"]],["u"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","hyper::server","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_future","","",21,[[["self"]],["f"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","hyper::server::conn","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_future","","",57,[[["self"]],["f"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_future","","",18,[[["self"]],["f"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","hyper::upgrade","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_future","","",58,[[["self"]],["f"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"borrow","hyper::header","",39,[[["self"]],["str"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","hyper","",52,N],[11,"hash","hyper::header","",41,N],[11,"hash","","",39,N],[11,"hash","hyper","",48,N],[11,"hash","","",51,N],[11,"hash","","",53,N],[11,"into_iter","hyper::header","",46,[[["self"]],["valueiter"]]],[11,"into_iter","","",36,[[["self"]],["valueitermut"]]],[11,"into_iter","hyper","Creates a consuming iterator, that is, one that moves keys and values out of the map in arbitary order. The map cannot be used after calling this.",43,[[["self"]],["intoiter"]]],[11,"clone","","",43,[[["self"]],["headermap"]]],[11,"clone","hyper::header","",41,[[["self"]],["headervalue"]]],[11,"clone","hyper","",53,[[["self"]],["version"]]],[11,"clone","","",48,[[["self"]],["method"]]],[11,"clone","","",52,[[["self"]],["uri"]]],[11,"clone","hyper::header","",39,[[["self"]],["headername"]]],[11,"clone","hyper","",51,[[["self"]],["statuscode"]]],[11,"from_iter","","",43,[[["i"]],["headermap"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"next_back","","",40,[[["self"]],["option"]]],[11,"next_back","","",30,[[["self"]],["option"]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,N],[11,"next","","",38,[[["self"]],["option"]]],[11,"size_hint","","",38,N],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,N],[11,"next","","",30,[[["self"]],["option"]]],[11,"next","","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,N],[11,"next","","",40,[[["self"]],["option"]]],[11,"size_hint","","",40,N],[11,"next","","",34,[[["self"]],["option"]]],[11,"size_hint","","",34,N],[11,"from_str","hyper","",51,[[["str"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_str","","",48,[[["str"]],["result",["method"]]]],[11,"from_str","hyper::header","",41,[[["str"]],["result",["headervalue"]]]],[11,"from_str","","",39,[[["str"]],["result",["headername","invalidheadername"]]]],[11,"from_str","hyper","",52,[[["str"]],["result",["uri","invaliduri"]]]],[11,"try_from","hyper::header","",41,[[["i64"]],["result",["headervalue"]]]],[11,"try_from","","",39,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",41,[[["u32"]],["result",["headervalue"]]]],[11,"try_from","hyper","",52,[[["parts"]],["result",["uri"]]]],[11,"try_from","hyper::header","",39,[[["bytes"]],["result",["headername"]]]],[11,"try_from","hyper","",51,[[["u16"]],["result",["statuscode"]]]],[11,"try_from","","",51,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","hyper::header","",41,[[["usize"]],["result",["headervalue"]]]],[11,"try_from","hyper","",48,[[["method"]],["result",["method"]]]],[11,"try_from","","",52,[[["uri"]],["result",["uri"]]]],[11,"try_from","","",52,[[["uri"]],["result",["uri"]]]],[11,"try_from","hyper::header","",41,[[["headername"]],["result",["headervalue"]]]],[11,"try_from","hyper","",52,[[["bytes"]],["result",["uri"]]]],[11,"try_from","","",51,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","hyper::header","",41,[[["bytes"]],["result",["headervalue"]]]],[11,"try_from","","",39,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",41,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",39,[[["str"]],["result",["headername"]]]],[11,"try_from","","",41,[[["u16"]],["result",["headervalue"]]]],[11,"try_from","","",41,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","hyper","",52,[[["string"]],["result",["uri"]]]],[11,"try_from","","",52,[[["string"]],["result",["uri"]]]],[11,"try_from","","",51,[[["str"]],["result",["statuscode"]]]],[11,"try_from","","",48,[[["method"]],["result",["method"]]]],[11,"try_from","hyper::header","",39,N],[11,"try_from","hyper","",48,[[["str"]],["result",["method"]]]],[11,"try_from","hyper::header","",41,[[["str"]],["result",["headervalue"]]]],[11,"try_from","","",41,[[["i16"]],["result",["headervalue"]]]],[11,"try_from","","",41,N],[11,"try_from","","",41,[[["isize"]],["result",["headervalue"]]]],[11,"try_from","","",41,[[["u64"]],["result",["headervalue"]]]],[11,"try_from","hyper","",48,N],[11,"try_from","","",51,N],[11,"try_from","hyper::header","",41,[[["i32"]],["result",["headervalue"]]]],[11,"try_from","hyper","",52,[[["str"]],["result",["uri"]]]],[11,"try_from","hyper::header","",41,[[["string"]],["result",["headervalue"]]]],[11,"default","hyper","",51,[[],["statuscode"]]],[11,"default","","",49,[[],["request"]]],[11,"default","","",53,[[],["version"]]],[11,"default","","",50,[[],["response"]]],[11,"default","","",43,[[],["headermap"]]],[11,"default","","",52,[[],["uri"]]],[11,"default","","",48,[[],["method"]]],[11,"description","hyper::header","",37,[[["self"]],["str"]]],[11,"description","","",32,[[["self"]],["str"]]],[11,"description","","",47,[[["self"]],["str"]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"description","","",45,[[["self"]],["str"]]],[11,"from","","",39,[[["headername"]],["headername"]]],[11,"from","","",41,[[["isize"]],["headervalue"]]],[11,"from","","",41,[[["u16"]],["headervalue"]]],[11,"from","","",41,[[["i16"]],["headervalue"]]],[11,"from","","",41,[[["u64"]],["headervalue"]]],[11,"from","hyper","",51,[[["statuscode"]],["statuscode"]]],[11,"from","hyper::header","",41,[[["u32"]],["headervalue"]]],[11,"from","","",41,[[["headername"]],["headervalue"]]],[11,"from","","",41,[[["i32"]],["headervalue"]]],[11,"from","hyper","",48,[[["method"]],["method"]]],[11,"from","hyper::header","",41,[[["i64"]],["headervalue"]]],[11,"from","","",41,[[["headervalue"]],["headervalue"]]],[11,"from","","",41,[[["usize"]],["headervalue"]]],[11,"eq","hyper","",52,[[["self"],["uri"]],["bool"]]],[11,"eq","","",53,[[["self"],["version"]],["bool"]]],[11,"ne","","",53,[[["self"],["version"]],["bool"]]],[11,"eq","hyper::header","Performs a case-insensitive comparison of the string against the header name",39,[[["self"],["str"]],["bool"]]],[11,"eq","hyper","",48,[[["self"],["method"]],["bool"]]],[11,"eq","hyper::header","",46,[[["self"],["getall"]],["bool"]]],[11,"eq","","",41,[[["self"],["t"]],["bool"]]],[11,"eq","","",39,[[["self"],["headername"]],["bool"]]],[11,"ne","","",39,[[["self"],["headername"]],["bool"]]],[11,"eq","","",41,N],[11,"eq","hyper","",48,[[["self"],["str"]],["bool"]]],[11,"eq","hyper::header","Performs a case-insensitive comparison of the string against the header name",39,[[["self"],["str"]],["bool"]]],[11,"eq","hyper","",48,[[["self"],["str"]],["bool"]]],[11,"eq","","",43,[[["self"],["headermap"]],["bool"]]],[11,"eq","hyper::header","",39,[[["self"],["headername"]],["bool"]]],[11,"eq","hyper","",51,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"eq","hyper::header","",41,[[["self"],["str"]],["bool"]]],[11,"eq","","",41,[[["self"],["headervalue"]],["bool"]]],[11,"eq","hyper","",51,[[["self"],["u16"]],["bool"]]],[11,"eq","","",52,[[["self"],["str"]],["bool"]]],[11,"eq","","",48,[[["self"],["method"]],["bool"]]],[11,"ne","","",48,[[["self"],["method"]],["bool"]]],[11,"eq","hyper::header","",41,[[["self"],["string"]],["bool"]]],[11,"eq","hyper","",52,[[["self"],["str"]],["bool"]]],[11,"as_ref","hyper::header","",39,[[["self"]],["str"]]],[11,"as_ref","hyper","",48,[[["self"]],["str"]]],[11,"as_ref","hyper::header","",39,N],[11,"as_ref","","",41,N],[11,"drop","","",42,N],[11,"drop","","",38,N],[11,"drop","","",35,N],[11,"index","hyper","Panics Using the index operator will cause a panic if the header you're querying isn't set.",43,[[["self"],["k"]],["t"]]],[11,"extend","","Extend a `HeaderMap` with the contents of another `HeaderMap`.",43,N],[11,"extend","","",43,N],[11,"cmp","","",53,[[["self"],["version"]],["ordering"]]],[11,"cmp","hyper::header","",41,[[["self"],["headervalue"]],["ordering"]]],[11,"cmp","hyper","",51,[[["self"],["statuscode"]],["ordering"]]],[11,"partial_cmp","hyper::header","",41,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",41,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","hyper","",51,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"lt","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"le","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"gt","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"ge","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"partial_cmp","","",53,[[["self"],["version"]],["option",["ordering"]]]],[11,"lt","","",53,[[["self"],["version"]],["bool"]]],[11,"le","","",53,[[["self"],["version"]],["bool"]]],[11,"gt","","",53,[[["self"],["version"]],["bool"]]],[11,"ge","","",53,[[["self"],["version"]],["bool"]]],[11,"partial_cmp","hyper::header","",41,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",41,N],[11,"partial_cmp","","",41,[[["self"],["headervalue"]],["option",["ordering"]]]],[11,"poll_data","hyper","",1,[[["self"]],["poll",["option"]]]],[11,"poll_trailers","","",1,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","",1,[[["self"]],["bool"]]],[11,"content_length","","",1,[[["self"]],["option",["u64"]]]],[11,"connect","hyper::client","",9,N],[11,"extend","hyper","",3,[[["self"],["t"]]]],[11,"as_ref","","",3,N],[11,"default","","Returns `Body::empty()`.",1,[[],["body"]]],[11,"default","","",3,[[],["chunk"]]],[11,"default","hyper::client","",13,[[],["client",["httpconnector","body"]]]],[11,"default","","",14,[[],["self"]]],[11,"from","hyper","",1,[[["chunk"]],["body"]]],[11,"from","","",1,[[["box",["stream"]]],["body"]]],[11,"from","","",1,[[["bytes"]],["body"]]],[11,"from","","",1,[[["vec",["u8"]]],["body"]]],[11,"from","","",1,N],[11,"from","","",1,[[["cow"]],["body"]]],[11,"from","","",1,[[["string"]],["body"]]],[11,"from","","",1,[[["str"]],["body"]]],[11,"from","","",1,[[["cow",["str"]]],["body"]]],[11,"from","","",3,[[["vec",["u8"]]],["chunk"]]],[11,"from","","",3,N],[11,"from","","",3,[[["string"]],["chunk"]]],[11,"from","","",3,[[["str"]],["chunk"]]],[11,"from","","",3,[[["bytes"]],["chunk"]]],[11,"clone","hyper::client::conn","",8,[[["self"]],["builder"]]],[11,"clone","hyper::client","",9,[[["self"]],["httpconnector"]]],[11,"clone","hyper::client::connect","",11,[[["self"]],["destination"]]],[11,"clone","hyper::client","",13,[[["self"]],["client"]]],[11,"clone","","",14,[[["self"]],["builder"]]],[11,"clone","hyper::server::conn","",17,[[["self"]],["http"]]],[11,"into_iter","hyper","",3,N],[11,"deref","","",3,N],[11,"fmt","hyper::error","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::body","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::conn","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::connect","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::error","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server::conn","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::upgrade","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"read","","",28,N],[11,"write","","",28,N],[11,"flush","","",28,[[["self"]],["result"]]],[11,"description","hyper::error","",15,[[["self"]],["str"]]],[11,"cause","","",15,[[["self"]],["option",["stderror"]]]],[11,"remaining","hyper","",3,[[["self"]],["usize"]]],[11,"bytes","","",3,N],[11,"advance","","",3,[[["self"],["usize"]]]],[11,"poll","hyper::client::conn","",7,[[["self"]],["poll"]]],[11,"poll","","",55,[[["self"]],["poll"]]],[11,"poll","","",56,[[["self"]],["poll"]]],[11,"poll","hyper::client","",54,[[["self"]],["poll"]]],[11,"poll","hyper::server::conn","",18,[[["self"]],["poll"]]],[11,"poll","","",57,[[["self"]],["poll"]]],[11,"poll","hyper::server","",21,[[["self"]],["poll"]]],[11,"poll","hyper::upgrade","",58,[[["self"]],["poll"]]],[11,"poll","hyper","",1,[[["self"]],["poll",["option"]]]],[11,"poll","hyper::server::conn","",19,[[["self"]],["poll",["option"]]]],[11,"poll","","",20,[[["self"]],["poll",["option"]]]],[11,"shutdown","hyper::upgrade","",28,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",28,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"prepare_uninitialized_buffer","","",28,N],[11,"read_buf","","",28,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"or_insert","hyper::header","Ensures a value is in the entry by inserting the default if empty.",0,[[["self"],["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty.",0,[[["self"],["f"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[11,"key","","Returns a reference to the entry's key",33,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",33,[[["self"]],["headername"]]],[11,"insert","","Insert the value into the entry.",33,[[["self"],["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",33,[[["self"],["t"]],["occupiedentry"]]],[11,"key","","Returns a reference to the entry's key.",36,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",36,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",36,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to the first value.",36,[[["self"]],["t"]]],[11,"insert","","Sets the value of the entry.",36,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",36,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",36,N],[11,"remove","","Remove the entry from the map.",36,[[["self"]],["t"]]],[11,"remove_entry","","Remove the entry from the map.",36,N],[11,"remove_entry_mult","","Remove the entry from the map.",36,N],[11,"iter","","Returns an iterator visiting all values associated with the entry.",36,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated with the entry.",36,[[["self"]],["valueitermut"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",39,N],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",39,N],[11,"from_static","","Converts a static string to a HTTP header name.",39,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",39,[[["self"]],["str"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",41,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",41,[[["str"]],["result",["headervalue","invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",41,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",41,N],[11,"from_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",41,[[["bytes"]],["result",["headervalue","invalidheadervaluebytes"]]]],[11,"from_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without validating.",41,[[["bytes"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains visible ASCII chars.",41,[[["self"]],["result",["str","tostrerror"]]]],[11,"len","","Returns the length of `self`.",41,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero bytes.",41,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",41,N],[11,"set_sensitive","","Mark that the header value represents sensitive information.",41,N],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",41,[[["self"]],["bool"]]],[11,"new","hyper","Create an empty `HeaderMap`.",43,[[],["headermap",["headervalue"]]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",43,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",43,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",43,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",43,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory for reuse.",43,N],[11,"capacity","","Returns the number of headers the map can hold without reallocating.",43,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers to be inserted into the `HeaderMap`.",43,N],[11,"get","","Returns a reference to the value associated with the key.",43,[[["self"],["k"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value associated with the key.",43,[[["self"],["k"]],["option"]]],[11,"get_all","","Returns a view of all values associated with a key.",43,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified key.",43,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",43,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable value references.",43,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",43,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",43,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",43,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",43,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",43,[[["self"],["k"]],["result",["entry","invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",43,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",43,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated with the key.",43,[[["self"],["k"]],["option"]]],[11,"iter","hyper::header","Returns an iterator visiting all values associated with the entry.",46,[[["self"]],["valueiter"]]],[18,"GET","hyper","GET",48,N],[18,"POST","","POST",48,N],[18,"PUT","","PUT",48,N],[18,"DELETE","","DELETE",48,N],[18,"HEAD","","HEAD",48,N],[18,"OPTIONS","","OPTIONS",48,N],[18,"CONNECT","","CONNECT",48,N],[18,"PATCH","","PATCH",48,N],[18,"TRACE","","TRACE",48,N],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",48,N],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request is essentially read-only.",48,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result if executed multiple times.",48,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",48,[[["self"]],["str"]]],[11,"builder","","Creates a new builder-style object to manufacture a `Request`",49,[[],["builder"]]],[11,"get","","Creates a new `Builder` initialized with a GET method and the given URI.",49,[[["t"]],["builder"]]],[11,"put","","Creates a new `Builder` initialized with a PUT method and the given URI.",49,[[["t"]],["builder"]]],[11,"post","","Creates a new `Builder` initialized with a POST method and the given URI.",49,[[["t"]],["builder"]]],[11,"delete","","Creates a new `Builder` initialized with a DELETE method and the given URI.",49,[[["t"]],["builder"]]],[11,"options","","Creates a new `Builder` initialized with an OPTIONS method and the given URI.",49,[[["t"]],["builder"]]],[11,"head","","Creates a new `Builder` initialized with a HEAD method and the given URI.",49,[[["t"]],["builder"]]],[11,"connect","","Creates a new `Builder` initialized with a CONNECT method and the given URI.",49,[[["t"]],["builder"]]],[11,"patch","","Creates a new `Builder` initialized with a PATCH method and the given URI.",49,[[["t"]],["builder"]]],[11,"trace","","Creates a new `Builder` initialized with a TRACE method and the given URI.",49,[[["t"]],["builder"]]],[11,"new","","Creates a new blank `Request` with the body",49,[[["t"]],["request"]]],[11,"from_parts","","Creates a new `Request` with the given components parts and body.",49,[[["parts"],["t"]],["request"]]],[11,"method","","Returns a reference to the associated HTTP method.",49,[[["self"]],["method"]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",49,[[["self"]],["method"]]],[11,"uri","","Returns a reference to the associated URI.",49,[[["self"]],["uri"]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",49,[[["self"]],["uri"]]],[11,"version","","Returns the associated version.",49,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",49,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",49,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field map.",49,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",49,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",49,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",49,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",49,[[["self"]],["t"]]],[11,"into_body","","Consumes the request, returning just the body.",49,[[["self"]],["t"]]],[11,"into_parts","","Consumes the request returning the head and body parts.",49,N],[11,"map","","Consumes the request returning a new request with body mapped to the return type of the passed in function.",49,[[["self"],["f"]],["request"]]],[11,"builder","","Creates a new builder-style object to manufacture a `Response`",50,[[],["builder"]]],[11,"new","","Creates a new blank `Response` with the body",50,[[["t"]],["response"]]],[11,"from_parts","","Creates a new `Response` with the given head and body",50,[[["parts"],["t"]],["response"]]],[11,"status","","Returns the `StatusCode`.",50,[[["self"]],["statuscode"]]],[11,"status_mut","","Returns a mutable reference to the associated `StatusCode`.",50,[[["self"]],["statuscode"]]],[11,"version","","Returns a reference to the associated version.",50,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",50,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",50,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field map.",50,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",50,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",50,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",50,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",50,[[["self"]],["t"]]],[11,"into_body","","Consumes the response, returning just the body.",50,[[["self"]],["t"]]],[11,"into_parts","","Consumes the response returning the head and body parts.",50,N],[11,"map","","Consumes the response returning a new response with body mapped to the return type of the passed in function.",50,[[["self"],["f"]],["response"]]],[11,"from_u16","","Converts a u16 to a status code.",51,[[["u16"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",51,N],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",51,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",51,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",51,[[["self"]],["option",["str"]]]],[11,"is_informational","","Check if status is within 100-199.",51,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",51,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",51,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",51,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",51,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",51,N],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",51,N],[18,"PROCESSING","","102 Processing [RFC2518]",51,N],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",51,N],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",51,N],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",51,N],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",51,N],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",51,N],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",51,N],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",51,N],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",51,N],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",51,N],[18,"IM_USED","","226 IM Used [RFC3229]",51,N],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",51,N],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",51,N],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",51,N],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",51,N],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",51,N],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",51,N],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",51,N],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",51,N],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",51,N],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",51,N],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",51,N],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",51,N],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",51,N],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",51,N],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",51,N],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",51,N],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",51,N],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",51,N],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",51,N],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",51,N],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",51,N],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",51,N],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",51,N],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",51,N],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",51,N],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",51,N],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but RFC2324]",51,N],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",51,N],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",51,N],[18,"LOCKED","","423 Locked [RFC4918]",51,N],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",51,N],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",51,N],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",51,N],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",51,N],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",51,N],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",51,N],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",51,N],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",51,N],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",51,N],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",51,N],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",51,N],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",51,N],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",51,N],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",51,N],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",51,N],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",51,N],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",51,N],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",52,[[["parts"]],["result",["uri","invaliduriparts"]]]],[11,"from_shared","","Attempt to convert a `Uri` from `Bytes`",52,[[["bytes"]],["result",["uri","invaliduribytes"]]]],[11,"from_static","","Convert a `Uri` from a static string.",52,[[["str"]],["uri"]]],[11,"into_parts","","Convert a `Uri` into `Parts`.",52,[[["self"]],["parts"]]],[11,"path_and_query","","Returns the path & query components of the Uri",52,[[["self"]],["option",["pathandquery"]]]],[11,"path","","Get the path of this `Uri`.",52,[[["self"]],["str"]]],[11,"scheme_part","","Get the scheme of this `Uri`.",52,[[["self"]],["option",["scheme"]]]],[11,"authority_part","","Get the authority of this `Uri`.",52,[[["self"]],["option",["authority"]]]],[11,"host","","Get the host of this `Uri`.",52,[[["self"]],["option",["str"]]]],[11,"port","","Get the port of this `Uri`.",52,[[["self"]],["option",["u16"]]]],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",52,[[["self"]],["option",["str"]]]],[18,"HTTP_09","","`HTTP/0.9`",53,N],[18,"HTTP_10","","`HTTP/1.0`",53,N],[18,"HTTP_11","","`HTTP/1.1`",53,N],[18,"HTTP_2","","`HTTP/2.0`",53,N],[11,"poll_trailers","hyper::body","Poll for an optional single `HeaderMap` of trailers.",4,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","A hint that the `Body` is complete, and doesn't need to be polled more.",4,[[["self"]],["bool"]]],[11,"content_length","","Return a length of the total bytes that will be streamed, if known.",4,[[["self"]],["option",["u64"]]]]],"paths":[[4,"Entry"],[3,"Body"],[3,"Sender"],[3,"Chunk"],[8,"Payload"],[3,"Parts"],[3,"SendRequest"],[3,"Connection"],[3,"Builder"],[3,"HttpConnector"],[8,"Connect"],[3,"Destination"],[3,"Connected"],[3,"Client"],[3,"Builder"],[3,"Error"],[3,"Parts"],[3,"Http"],[3,"Connection"],[3,"Serve"],[3,"AddrIncoming"],[3,"Server"],[3,"Builder"],[8,"NewService"],[8,"Service"],[8,"Future"],[8,"Stream"],[3,"Parts"],[3,"Upgraded"],[3,"Values"],[3,"ValueIterMut"],[3,"InvalidHeaderValueBytes"],[3,"ToStrError"],[3,"VacantEntry"],[3,"Iter"],[3,"IntoIter"],[3,"OccupiedEntry"],[3,"InvalidHeaderNameBytes"],[3,"ValueDrain"],[3,"HeaderName"],[3,"ValueIter"],[3,"HeaderValue"],[3,"Drain"],[3,"HeaderMap"],[3,"Keys"],[3,"InvalidHeaderName"],[3,"GetAll"],[3,"InvalidHeaderValue"],[3,"Method"],[3,"Request"],[3,"Response"],[3,"StatusCode"],[3,"Uri"],[3,"Version"],[3,"ResponseFuture"],[3,"Handshake"],[3,"ResponseFuture"],[3,"Connecting"],[3,"OnUpgrade"]]};
initSearch(searchIndex);
